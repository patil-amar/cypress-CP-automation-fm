{"version":3,"sources":["App/components/Box.js","constants.js","App/components/Button.js","App/components/Navigation.js","App/components/Page.js","App/components/Table.js","App/components/Overlay.js","App/components/Spinner.js","App/components/Select.js","App/components/Input.js","utils.js","App/Countries/useStorage.js","App/Countries/index.js","App/Home/index.js","App/Countries/Country.js","App/index.js","index.js"],"names":["Box","styled","div","props","horizontal","vertical","padding","map","p","join","margin","justify","align","COLORS","black","white","blue","base","rollover","active","disabled","THEME","colors","bg","fg","palette","primary","STORAGE","id","BaseButton","button","Button","NavItem","to","title","children","pathname","useLocation","split","root","NavButtonItem","as","Link","$isActive","startsWith","Nav","attrs","Page","PageHeader","PageContent","Table","table","cellSpacing","TBody","tbody","Tr","tr","Th","th","Td","td","Thead","thead","Overlay","Spinner","StyledSpinner","viewBox","className","cx","cy","r","fill","strokeWidth","svg","Select","select","Input","input","localStorage","set","key","value","window","setItem","error","console","warn","get","getItem","remove","removeItem","clear","useStorage","useState","JSON","parse","type","setType","useEffect","stringify","Countries","history","useHistory","useCountries","countries","loading","keyword","setKeyword","marked","setMarked","selected","setSelected","visited","setVisited","wanted","setWanted","byKeyword","country","name","toLowerCase","Toolbar","ToolbarInfo","Boolean","length","ToolbarFilters","placeholder","onChange","e","target","ToolbarActions","data-test","operation","filteredSelected","s","Set","filter","includes","width","isChecked","checked","filtered","code","onClick","push","stopPropagation","emoji","continent","capital","currency","languages","l","VisitedInput","event","WantedInput","IconInput","response","useQuery","gql","data","Home","Panels","Panel","PanelContent","Count","Country","variables","useCountry","useParams","toUpperCase","isVisited","isWanted","FaArrowLeft","horziontal","CountryInfo","CountryMeta","VisitedButton","c","WantedButton","MapWrapper","height","src","frameBorder","scrolling","marginHeight","marginWidth","Key","App","GlobalStyle","path","exact","component","Navigation","createGlobalStyle","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64df09c4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Box = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: ${(props) => props.horizontal && \"row\"};\n  flex-direction: ${(props) => props.vertical && \"column\"};\n  padding: ${(props) => (props.padding || []).map((p) => `${p}px`).join(\" \")};\n  margin: ${(props) => (props.margin || []).map((p) => `${p}px`).join(\" \")};\n  justify-content: ${(props) => props.justify && props.justify};\n  align-items: ${(props) => props.align && props.align};\n`;\n\nexport { Box };\n","const COLORS = {\n  black: [\n    \"#000\",\n    \"#111\",\n    \"#222\",\n    \"#333\",\n    \"#444\",\n    \"#555\",\n    \"#666\",\n    \"#777\",\n    \"#888\",\n  ],\n  white: [\"#fff\", \"#eee\", \"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\"],\n  blue: {\n    base: \"#005EBD\",\n    rollover: \"#0054A8\",\n    active: \"#0059B2\",\n    disabled: \"rgba(#005EBD, 0.5)\",\n  },\n};\n\nconst THEME = {\n  colors: {\n    bg: COLORS.black,\n    fg: COLORS.white,\n    palette: {\n      primary: {\n        base: COLORS.blue.base,\n        rollover: COLORS.blue.rollover,\n        active: COLORS.blue.active,\n        disabled: COLORS.blue.disabled,\n        fg: COLORS.white[1],\n      },\n    },\n  },\n};\n\nconst STORAGE = {\n  visited: {\n    id: \"visited\",\n  },\n  wanted: {\n    id: \"wanted\",\n  },\n};\n\nexport { THEME, STORAGE };\n","import styled from \"styled-components\";\nimport { THEME } from \"../../constants\";\n\nconst BaseButton = styled.button`\n  border: 0;\n  background: transparent;\n  color: inherit;\n  cursor: pointer;\n`;\n\nconst Button = styled(BaseButton)`\n  background: ${THEME.colors.palette.primary.base};\n  color: ${THEME.colors.palette.primary.fg};\n  width: auto;\n  padding: 10px 14px;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n\n  &:hover {\n    background: ${THEME.colors.palette.primary.rollover};\n  }\n\n  &:active {\n    background: ${THEME.colors.palette.primary.active};\n  }\n\n  &:disabled {\n    background: ${THEME.colors.palette.primary.disabled};\n  }\n\n  svg {\n    padding-right: 5px;\n  }\n`;\n\nconst ButtonIcon = styled(Button)`\n  height: 30px;\n  width: 30px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport { Button, BaseButton, ButtonIcon };\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Box } from \"./Box\";\nimport { Button } from \"./Button\";\nimport { THEME } from \"../../constants\";\n\nfunction NavItem({ to, title, children }) {\n  const { pathname } = useLocation();\n  // eslint-disable-next-line no-unused-vars\n  const [_, root] = pathname.split(\"/\");\n\n  return (\n    <NavButtonItem\n      as={Link}\n      title={title}\n      to={to}\n      // Match exact or descendent paths of parent (root)\n      // Using transient prop `https://styled-components.com/docs/api#transient-props`\n      $isActive={pathname === to || (root && to.startsWith(`/${root}`))}\n    >\n      {children}\n    </NavButtonItem>\n  );\n}\n\nconst Nav = styled(Box).attrs(() => ({\n  as: \"nav\",\n}))`\n  flex: 1 1 auto;\n`;\n\nconst NavButtonItem = styled(Button)`\n  display: flex;\n  background: transparent;\n  padding: 14px 16px;\n  color: ${THEME.colors.fg[1]};\n  background: ${(props) =>\n    props.$isActive ? THEME.colors.palette.primary.base : \"transparent\"};\n`;\n\nexport { Nav, NavItem };\n","import styled from \"styled-components\";\nimport { THEME } from \"../../constants\";\nimport { Box } from \"./Box\";\n\nconst Page = styled.div`\n  display: block;\n`;\n\nconst PageHeader = styled(Box).attrs(() => ({}))`\n  background: ${THEME.colors.bg[2]};\n  color: ${THEME.colors.fg[1]};\n  z-index: 200;\n`;\n\nconst PageContent = styled(Box)`\n  margin: 10px;\n  flex-direction: column;\n`;\n\nexport { Page, PageHeader, PageContent };\n","import styled from \"styled-components\";\nimport { THEME } from \"../../constants\";\n\nconst Table = styled.table.attrs(() => ({\n  cellSpacing: 0,\n}))``;\n\nconst TBody = styled.tbody``;\n\nconst Tr = styled.tr`\n  &:hover {\n    background: ${THEME.colors.fg[1]};\n  }\n`;\n\nconst Th = styled.th`\n  padding: 5px;\n`;\n\nconst Td = styled.td`\n  padding: 5px;\n  ${(props) => props.align && `text-align: ${props.align};`}\n`;\n\nconst Thead = styled.thead`\n  text-align: left;\n\n  ${Td} {\n    font-weight: bold;\n  }\n`;\n\nexport { Table, Thead, TBody, Tr, Th, Td };\n","import styled from \"styled-components\";\n\nconst Overlay = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.5);\n  z-index: 100;\n`;\n\nexport { Overlay };\n","// @flow\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Spinner() {\n  return (\n    <StyledSpinner viewBox=\"0 0 50 50\">\n      <circle\n        className=\"path\"\n        cx=\"25\"\n        cy=\"25\"\n        r=\"20\"\n        fill=\"none\"\n        strokeWidth=\"2\"\n      />\n    </StyledSpinner>\n  );\n}\n\nconst StyledSpinner = styled.svg`\n  animation: rotate 1s linear infinite;\n  margin: 20px;\n  width: 50px;\n  height: 50px;\n\n  & .path {\n    stroke: #527c97;\n    stroke-linecap: round;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n`;\n\nexport { Spinner };\n","import styled from \"styled-components\";\n\nconst Select = styled.select`\n  background: rgba(0, 0, 0, 0.2);\n  border: 0;\n  color: inherit;\n  padding: 4px;\n  margin: 0 0 0 5px;\n`;\n\nexport { Select };\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  background: rgba(0, 0, 0, 0.2);\n  border: 0;\n  color: inherit;\n  padding: 4px 10px;\n  margin: 0 0 0 5px;\n  border-radius: 12px;\n\n  &::placeholder {\n    color: inherit;\n    opacity: 0.5;\n  }\n`;\n\nexport { Input };\n","// @flow\n\nfunction set(key: string, value: string) {\n  try {\n    window.localStorage.setItem(key, value);\n    return true;\n  } catch (error) {\n    console.warn(\"localStorage.setItem is not available\", error);\n    return false;\n  }\n}\n\nfunction get(key: string) {\n  try {\n    return window.localStorage.getItem(key);\n  } catch (error) {\n    console.warn(\"localStorage.getItem is not available\", error);\n    return null;\n  }\n}\n\nfunction remove(key: string) {\n  try {\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (error) {\n    console.warn(\"localStorage.removeItem is not available\", error);\n    return false;\n  }\n}\n\nfunction clear() {\n  try {\n    window.localStorage.clear();\n    return true;\n  } catch (error) {\n    console.warn(\"localStorage.clear is not available\", error);\n    return false;\n  }\n}\n\nconst localStorage = {\n  set,\n  get,\n  remove,\n  clear,\n};\n\nexport { localStorage };\n","import { useState, useEffect } from \"react\";\nimport { localStorage } from \"../../utils\";\n\nfunction useStorage(id) {\n  const [type, setType] = useState(JSON.parse(localStorage.get(id)) || []);\n\n  useEffect(() => {\n    localStorage.set(id, JSON.stringify(type));\n  }, [type, id]);\n\n  return [type, setType];\n}\n\nexport { useStorage };\n","import React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { FaCheck, FaMapMarkerAlt } from \"react-icons/fa\";\nimport { AppNav } from \"..\";\nimport { Page, PageHeader, PageContent } from \"../components/Page\";\nimport { Table, TBody, Thead, Th, Tr, Td } from \"../components/Table\";\nimport { Overlay } from \"../components/Overlay\";\nimport { Spinner } from \"../components/Spinner\";\nimport styled from \"styled-components\";\nimport { Box } from \"../components/Box\";\nimport { STORAGE, THEME } from \"../../constants\";\nimport { Select } from \"../components/Select\";\nimport { Input } from \"../components/Input\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStorage } from \"./useStorage\";\n\nfunction Countries() {\n  const history = useHistory();\n  const { countries, loading } = useCountries();\n  const [keyword, setKeyword] = useState(\"\");\n  const [marked, setMarked] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n\n  const [visited, setVisited] = useStorage(STORAGE.visited.id);\n  const [wanted, setWanted] = useStorage(STORAGE.wanted.id);\n\n  function byKeyword(country) {\n    return keyword\n      ? country.name.toLowerCase().startsWith(keyword.toLowerCase())\n      : country;\n  }\n\n  return (\n    <Page>\n      <PageHeader>\n        <AppNav />\n      </PageHeader>\n\n      <Toolbar padding={[0, 10]}>\n        <ToolbarInfo>\n          <Box margin={[0, 0, 0, 10]}>\n            {Boolean(selected.length) && `${selected.length}/`}\n            {countries.length} countries\n          </Box>\n        </ToolbarInfo>\n\n        <ToolbarFilters margin={[8]}>\n          <Input\n            type=\"text\"\n            placeholder=\"Filter by country name\"\n            onChange={(e) => {\n              setSelected([]);\n              setKeyword(e.target.value);\n            }}\n          />\n        </ToolbarFilters>\n\n        <ToolbarActions>\n          {Boolean(selected.length) && (\n            <label>\n              <Select\n                data-test=\"actions\"\n                name=\"Mark as\"\n                value={marked}\n                onChange={(e) => {\n                  const operation = e.target.value;\n                  const filteredSelected = selected.map((s) => s);\n\n                  setMarked(\"\");\n\n                  switch (operation) {\n                    case \"visited\": {\n                      return setVisited((visited) => [\n                        ...new Set([...visited, ...filteredSelected]),\n                      ]);\n                    }\n                    case \"not-visited\": {\n                      return setVisited((visited) =>\n                        visited.filter((id) => !filteredSelected.includes(id))\n                      );\n                    }\n                    case \"want-to-go\": {\n                      return setWanted((wanted) => [\n                        ...new Set([...wanted, ...filteredSelected]),\n                      ]);\n                    }\n                    case \"do-not-want-to-go\": {\n                      return setWanted((wanted) =>\n                        wanted.filter((id) => !filteredSelected.includes(id))\n                      );\n                    }\n                    default:\n                      return;\n                  }\n                }}\n              >\n                <option>Mark as</option>\n                <option value=\"visited\">Visited</option>\n                <option value=\"not-visited\">Not visited</option>\n                <option value=\"want-to-go\">Want to go</option>\n                <option value=\"do-not-want-to-go\">Do not want to go</option>\n              </Select>\n            </label>\n          )}\n        </ToolbarActions>\n      </Toolbar>\n\n      <PageContent>\n        {loading && (\n          <Overlay>\n            <Spinner />\n          </Overlay>\n        )}\n        <Table name=\"Countries\">\n          <colgroup>\n            <col />\n            <col />\n            <col />\n            <col width=\"300px\" />\n            <col />\n            <col />\n            <col />\n            <col />\n            <col width=\"90px\" />\n            <col width=\"90px\" />\n          </colgroup>\n          <Thead>\n            <Tr>\n              <Th>\n                <input\n                  type=\"checkbox\"\n                  onChange={(e) => {\n                    const isChecked = e?.target?.checked;\n                    setSelected(() => {\n                      const filtered = countries.filter(byKeyword);\n\n                      return isChecked\n                        ? filtered.map((country) => country.code)\n                        : [];\n                    });\n                  }}\n                />\n              </Th>\n              <Th>Flag</Th>\n              <Th>Code</Th>\n              <Th>Name</Th>\n              <Th>Continent</Th>\n              <Th>Capital</Th>\n              <Th>Currency</Th>\n              <Th>Language</Th>\n              <Th align=\"center\">Visited</Th>\n              <Th align=\"center\">Want to go</Th>\n            </Tr>\n          </Thead>\n          <TBody>\n            {countries.filter(byKeyword).map((country) => (\n              <Tr\n                key={country.code}\n                onClick={() =>\n                  history.push(`/countries/${country.code.toLowerCase()}`)\n                }\n              >\n                <Td onClick={(e) => e.stopPropagation()}>\n                  <Input\n                    data-test=\"input-country\"\n                    type=\"checkbox\"\n                    name={`${country.name} selector`}\n                    checked={selected.includes(country.code)}\n                    onChange={(e) => {\n                      const isChecked = e.target.checked;\n\n                      setSelected((selected) =>\n                        isChecked\n                          ? [...selected, country.code].filter(Boolean)\n                          : selected.filter((id) => id !== country.code)\n                      );\n                    }}\n                  />\n                </Td>\n                <Td>{country.emoji}</Td>\n                <Td>{country.code}</Td>\n                <Td>{country.name}</Td>\n                <Td>{country.continent.name}</Td>\n                <Td>{country.capital}</Td>\n                <Td>{country.currency?.split(\",\")[0]}</Td>\n                <Td>{country.languages.map((l) => l.name)[0]}</Td>\n                <Td align=\"center\" onClick={(e) => e.stopPropagation()}>\n                  <label data-test=\"input-visited\">\n                    <VisitedInput\n                      type=\"checkbox\"\n                      name=\"visited\"\n                      checked={visited.includes(country.code)}\n                      onChange={(event) => {\n                        const isChecked = event.target.checked;\n                        setVisited((visited) =>\n                          !isChecked\n                            ? visited?.filter((l) => l !== country.code)\n                            : [...visited, country.code]\n                        );\n                      }}\n                    />\n                    <FaCheck />\n                  </label>\n                </Td>\n                <Td align=\"center\" onClick={(e) => e.stopPropagation()}>\n                  <label data-test=\"input-wanted\">\n                    <WantedInput\n                      type=\"checkbox\"\n                      name=\"wanted\"\n                      checked={wanted.includes(country.code)}\n                      onChange={(event) => {\n                        const isChecked = event.target.checked;\n                        setWanted((wanted) =>\n                          !isChecked\n                            ? wanted?.filter((l) => l !== country.code)\n                            : [...wanted, country.code]\n                        );\n                      }}\n                    />\n                    <FaMapMarkerAlt />\n                  </label>\n                </Td>\n              </Tr>\n            ))}\n          </TBody>\n        </Table>\n      </PageContent>\n    </Page>\n  );\n}\n\nconst IconInput = styled(Input)`\n  display: none;\n\n  &:checked,\n  &:hover {\n    & + * {\n      opacity: 1;\n    }\n  }\n\n  & + * {\n    opacity: 0.2;\n    color: inherit;\n  }\n`;\n\nconst VisitedInput = styled(IconInput)`\n  &:checked,\n  &:hover {\n    & + * {\n      color: green;\n    }\n  }\n`;\n\nconst WantedInput = styled(IconInput)`\n  &:checked,\n  &:hover {\n    & + * {\n      color: dodgerblue;\n    }\n  }\n`;\n\nconst ToolbarFilters = styled(Box)`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Toolbar = styled(Box)`\n  align-items: center;\n  background: ${THEME.colors.palette.primary.base};\n  color: ${THEME.colors.fg[1]};\n  height: 40px;\n\n  > * {\n    width: 33.3%;\n  }\n`;\n\nconst ToolbarInfo = styled(Box)`\n  justify-content: flex-start;\n`;\n\nconst ToolbarActions = styled(Box)`\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nfunction useCountries() {\n  const response = useQuery(gql`\n    query {\n      countries {\n        code\n        name\n        currency\n        emoji\n        capital\n        continent {\n          name\n          code\n        }\n        languages {\n          name\n        }\n      }\n\n      continents {\n        name\n      }\n    }\n  `);\n\n  const countries = response?.data?.countries || [];\n\n  return { ...response, countries };\n}\n\nexport { Countries, useCountries };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AppNav } from \"..\";\nimport { STORAGE, THEME } from \"../../constants\";\nimport { Box } from \"../components/Box\";\nimport { Button } from \"../components/Button\";\nimport { Page, PageHeader, PageContent } from \"../components/Page\";\nimport { Spinner } from \"../components/Spinner\";\nimport { useCountries } from \"../Countries\";\nimport { useStorage } from \"../Countries/useStorage\";\n\nfunction Home() {\n  const [visited, setVisited] = useStorage(STORAGE.visited.id);\n  const [wanted, setWanted] = useStorage(STORAGE.wanted.id);\n\n  const { countries, loading } = useCountries();\n\n  return (\n    <Page>\n      <PageHeader>\n        <AppNav />\n      </PageHeader>\n\n      <PageContent>\n        <h3>Dashboard</h3>\n\n        <Panels>\n          <Panel id=\"countries-available\">\n            <PanelContent vertical>\n              <Count justify=\"center\" margin={[40]}>\n                {loading ? <Spinner /> : countries.length}\n              </Count>\n              <Box justify=\"center\" margin={[0, 0, 20, 0]}>\n                Countries available\n              </Box>\n            </PanelContent>\n          </Panel>\n          <Panel id=\"countries-visited\">\n            <PanelContent vertical>\n              <Count justify=\"center\" margin={[40]}>\n                {visited.length}\n              </Count>\n              <Box justify=\"center\" margin={[0, 0, 20, 0]}>\n                Countries visited\n              </Box>\n              {Boolean(visited.length) && (\n                <Button onClick={() => setVisited([])}>Reset</Button>\n              )}\n            </PanelContent>\n          </Panel>\n          <Panel id=\"countries-wanted\">\n            <PanelContent vertical>\n              <Count justify=\"center\" margin={[40]}>\n                {wanted.length}\n              </Count>\n              <Box justify=\"center\" margin={[0, 0, 20, 0]}>\n                Countries to visit\n              </Box>\n              {Boolean(wanted.length) && (\n                <Button onClick={() => setWanted([])}>Reset</Button>\n              )}\n            </PanelContent>\n          </Panel>\n        </Panels>\n      </PageContent>\n    </Page>\n  );\n}\n\nconst Panels = styled(Box)``;\n\nconst Panel = styled(Box).attrs(() => ({\n  padding: [20],\n  margin: [0, 10, 10, 0],\n  vertical: true,\n}))`\n  background: ${THEME.colors.fg[1]};\n  width: 320px;\n`;\n\nconst PanelContent = styled(Box)``;\n\nconst Count = styled(Box)`\n  font-size: 60px;\n`;\n\nexport { Home };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { FaCheck, FaMapMarkerAlt, FaArrowLeft } from \"react-icons/fa\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { AppNav } from \"..\";\nimport { STORAGE } from \"../../constants\";\nimport { Box } from \"../components/Box\";\nimport { Button } from \"../components/Button\";\nimport { Page, PageHeader, PageContent } from \"../components/Page\";\nimport { useStorage } from \"./useStorage\";\n\nfunction Country() {\n  const { code } = useParams();\n  const { country } = useCountry({ code: code.toUpperCase() });\n\n  const [visited, setVisited] = useStorage(STORAGE.visited.id);\n  const [wanted, setWanted] = useStorage(STORAGE.wanted.id);\n\n  const isVisited = visited.includes(country.code);\n  const isWanted = wanted.includes(country.code);\n\n  return (\n    <Page>\n      <PageHeader>\n        <AppNav />\n      </PageHeader>\n\n      <PageContent>\n        <Box vertical>\n          <h1>\n            {country.emoji} {country.name}\n          </h1>\n\n          <Box margin={[0, 0, 20, 0]}>\n            <Box to=\"/countries\" as={Link} align=\"center\">\n              <Box as={FaArrowLeft} margin={[0, 5, 0]} /> Go back to countries\n            </Box>\n          </Box>\n        </Box>\n\n        {country && (\n          <Box horziontal>\n            <CountryInfo vertical>\n              <CountryMeta title=\"Name\">{country.name}</CountryMeta>\n              <CountryMeta title=\"Code\">{country.code}</CountryMeta>\n              <CountryMeta title=\"Capital\">{country.capital}</CountryMeta>\n              <CountryMeta title=\"Continent\">\n                {country.continent?.name}\n              </CountryMeta>\n              <CountryMeta title=\"Currency\">{country.currency}</CountryMeta>\n              {Boolean(country?.languages?.length) && (\n                <CountryMeta title=\"Language\">\n                  {country.languages[0].name}\n                </CountryMeta>\n              )}\n\n              <Box margin={[10, 0]}>\n                <VisitedButton\n                  isVisited={isVisited}\n                  onClick={() => {\n                    setVisited((visited) =>\n                      isVisited\n                        ? visited.filter((c) => c !== country.code)\n                        : [...visited, country.code]\n                    );\n                  }}\n                >\n                  {isVisited ? (\n                    <>\n                      <FaCheck /> Visited\n                    </>\n                  ) : (\n                    \"Set as visited\"\n                  )}\n                </VisitedButton>\n                <WantedButton\n                  isWanted={isWanted}\n                  onClick={() => {\n                    setWanted((wanted) =>\n                      isWanted\n                        ? wanted.filter((c) => c !== country.code)\n                        : [...wanted, country.code]\n                    );\n                  }}\n                >\n                  {isWanted ? (\n                    <>\n                      <FaMapMarkerAlt /> Want to visit\n                    </>\n                  ) : (\n                    \"Set as want to visit\"\n                  )}\n                </WantedButton>\n              </Box>\n            </CountryInfo>\n            <MapWrapper padding={[0, 20]}>\n              <iframe\n                title=\"map\"\n                width=\"970\"\n                height=\"500\"\n                id=\"gmap_canvas\"\n                src={`https://maps.google.com/maps?q=${country.name}&t=&z=5&ie=UTF8&iwloc=&output=embed`}\n                frameBorder=\"0\"\n                scrolling=\"no\"\n                marginHeight=\"0\"\n                marginWidth=\"0\"\n              ></iframe>\n            </MapWrapper>\n          </Box>\n        )}\n      </PageContent>\n    </Page>\n  );\n}\n\nfunction CountryMeta({ title, children }) {\n  return (\n    <Box justify=\"space-between\" margin={[0, 0, 10, 0]}>\n      <Key>{title}</Key>\n      <Box>{children}</Box>\n    </Box>\n  );\n}\n\nconst Key = styled(Box)`\n  font-weight: bold;\n`;\n\nconst VisitedButton = styled(Button)`\n  width: 100%;\n  margin-right: 5px;\n\n  background: ${(props) => props.isVisited && \"green\"};\n`;\n\nconst WantedButton = styled(Button)`\n  width: 100%;\n  margin-left: 5px;\n\n  background: ${(props) => props.isWanted && \"dodgerblue\"};\n`;\n\nconst CountryInfo = styled(Box)`\n  width: 30%;\n`;\n\nconst MapWrapper = styled(Box)`\n  width: 70%;\n`;\n\nfunction useCountry({ code }) {\n  const response = useQuery(\n    gql`\n      query Country($code: ID!) {\n        country(code: $code) {\n          code\n          name\n          currency\n          emoji\n          capital\n          continent {\n            name\n            code\n          }\n          languages {\n            name\n          }\n        }\n      }\n    `,\n    {\n      variables: {\n        code,\n      },\n    }\n  );\n\n  const country = response?.data?.country || [];\n\n  return { ...response, country };\n}\n\nexport { Country };\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Nav, NavItem } from \"./components/Navigation\";\nimport { Countries } from \"./Countries\";\nimport { Home } from \"./Home\";\nimport { Country } from \"./Countries/Country\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/countries\" exact component={Countries} />\n          <Route path=\"/countries/:code\" component={Country} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nfunction Navigation() {\n  return (\n    <Nav>\n      <NavItem to=\"/\" title=\"Home\">\n        Home\n      </NavItem>\n      <NavItem to=\"/countries\" title=\"Countries\">\n        Countries\n      </NavItem>\n    </Nav>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    margin: 0 auto;\n    font-size: 14px;\n    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport { App, Navigation as AppNav };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { App } from \"./App\";\n\nconst client = new ApolloClient({\n  uri: \"https://countries.trevorblades.com/\",\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}